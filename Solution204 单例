class Solution {
    /**
     * @return: The same instance of this class every time
     * 思路：单例模式指一个类只有一个实例存在。单例分为饿汉式单例（无任如何都会创建一个实例，且每次都是获取同意实例）和懒汉式单例（只有在调用的时候才会
     * 创建实例）。所以说饿汉式性能消耗大，可能会卡顿哦。下面采用懒汉式创建实例：
     */
    //懒汉式单例模式
    //准备一个类属性，用于指向一个实例化对象，但是暂时指向null
    public static Solution instance = null;
        
    //public static方法，返回实例化对象
    public static Solution getInstance(){
        //第一次调用instance时，发现没有指向任何对象，这是实例化一个对象
        if(instance == null){
            instance = new Solution();
        }
        //返回instance指向的对象
        return instance;
    }
};
